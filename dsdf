#MDH方法
import sympy as sy
import numpy as np
import math
from math import atan2

#MDH参数
alpha=[0,np.pi/2,0,np.pi,-np.pi/2,np.pi/2]
a=[0,0,136.35,100,0,0]
offset=[np.pi/2,np.pi/2,0,np.pi/2,0,0]
d=[170.46,80,0,0,-85,-62.4]

def MTi(alpha,a,d,theta,DHtype="MDH"):

    #x轴变化阵，右手系，顺针旋负方向
    Rx=sy.Matrix([
       [1, 0,        0,        0],
       [0, sy.cos(alpha), -sy.sin(alpha), 0],
       [0, sy.sin(alpha), sy.cos(alpha),  0],
       [0, 0,        0,         1]
        ])
    #沿着x轴平移，有方向
    Tx=sy.Matrix([
       [1, 0, 0,  a],
       [0, 1, 0,  0],
       [0, 0,1,   0],
       [0, 0,0,   1]
        ])
    #z轴旋转阵，右手系，顺针旋负方向
    Rz=sy.Matrix([
       [sy.cos(theta),  -sy.sin(theta),   0,  0],
       [sy.sin(theta), sy.cos(theta),   0,  0],
       [0,             0,            1,  0],
       [0,             0,            0,  1]
        ])
    #沿着z轴平移，有方向
    Tz=sy.Matrix([
       [1, 0, 0,  0],
       [0, 1, 0,  0],
       [0, 0,1,   d],
       [0, 0,0,   1]
        ])

    print("MDH——TR",Rx@Tx@Rz@Tz)
    return Rx@Tx@Rz@Tz

def Aiv(alpha,a,d,offset,theta=[0,0,0,0,0,0],Tnum=6):
    """
    依次右乘，推导出机械臂位姿矩阵
    """
    for i in range(Tnum):
        Ti=MTi(alpha[i],a[i],d[i],offset[i])
        if i==0:
            Ai=Ti
        else:
            Ai=Ai@Ti
    return Ai
#机械臂位姿矩阵如下
A06= Aiv(alpha,a,d,offset)  
print("位姿矩阵：",A06)
